Traditional applications have two components: Client and Server. The Client runs User Interfaces. The server runs business logic and hosts a central database.  Client cannot run business logic because it is not trusted by businesses.

Beyond Decentralized provides a secure environment right on user devices.  Databases reside on user devices because the data really belongs to users, not businesses. Apps run in isolation and do not access user data directly. They cooperate right on user devices, without sending data to servers.

Most businesses use Relational Databases.  In such databases data is organized into tables.  Tables are data groups that relate to each other.  Relational Databases organize data and give it high quality.

Beyond Decentralized is based on personal Relational Databases that are local to user devices.  All Apps store data in relational tables.  Newer Apps cooperate with existing apps by providing new tables that relate to existing ones.

Apps run in isolation from the database.  They are also isolated from each other.

Apps can read from tables of related Apps.  Apps cannot write to tables of other Apps.  They must call the business logic of Apps that own the tables to write to those tables.  This makes business logic work cooperatively across Applications.

With Beyond Decentralized data stays on user devices.  Data is not sent to third party Application servers.  Beyond Decentralized controls data sharing and lets the user decide how and with whom they share.  Sharing is done via independently operated file sharing systems like IPFS.

To be shared data is split into virtual Repositories.  Repositories are completely independent or each other.  Each repository is shared separately.  Repositories allow users to participate in different groups without having to share all of the data between all of the groups.

Most programmers use relational databases with well known patterns. Beyond Decentralized is designed to be familiar to all programmers.

Beyond Decentralized enables Fair Data Ownership and Independent Software Development.  Fair Data Ownership is accomplished by keeping high quality data in the user's hands.  Independent software developers can write Apps that cooperate with each other, using familiar tooling and frame of reference.