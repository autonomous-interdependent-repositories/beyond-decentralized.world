In 2015 I wrote a Family Organizer and very quickly realized that
I would have to maintain a server where other families would keep
their data.  That started me thinking that I can write a quick
adapter for Google Docs to store data in.  Since then AIRport
development has been driven by data decentralization.  Probably
2 or 3 years back I started getting the idea that it can also
work in centralized environments and seamlessly serve both
centralized (though distributed) data along with decentralized
data, without compromising privacy.  Now finally I'm seeing the
picture of how it now centralized data become a network of
decenralized repositories while still fulfilling the needs of
data centralization.

In the decentralized environment AIRport runs on user devices,
apps are loaded in VMs and inter-operate through AIRport.  The
key difference between this and current state of the art is
that right now Apps call APIs vs in AIRport they all have
access to the same relational database and can both make
queries and share in persisting of the data (collectively,
across apps).

Luckily, just I've been tasked at my day job to build an OAuth
server.  This made me realized that there already is an
authorization infrastructure for such interoperation.
Apps are already talking to APIs everywhere, they just aren't
sharing a common database.  This is where Data Independence
Network comes into the picture.  It has has been gathered to
answer the question of how do you share a database across
organizations and jurisdictions.

The technical solution for common databases is already in
place - relational databases like CockroachDB already let
you partition relational tables and schemas geographically
or in just about any other way.  But this still means
that you have to be on the same database and the
decentralization features of AIRport's Autonomous
Interdependent Repositories (AIR) are not required.

But, realistically, you can't expect organizations and
governments to sign up for sharing all of their data with
everybody else.  There has to be a way to share just
the right amount of data to fulfill the needs of the
calling App. This is where AIRport excels - each 
Repository is meant to have all of the information need
to fulfill functions associated with that data and also
can automatically be linked with more related data, if
and when needed.  Because each Repository hop is a
distinct operation, AIRport can provide information on
exactly how and exactly to whom, and via which links
 data is shared.

This sharing granularity, combined with ability to
separate Data providers from Application providers
gives the ability for Applications to share data
across companies and jurisdictions without compromising
privacy of those companies and jurisdictions, just like
it is meant for Applications to share data of end Users
without compromising their privacy.  This can be
accomplished because AIRport controls all database access
and API operation flow and acts as a temporary custodian
for the data.  Applications just run in locked down VMs
and can't send or receive data from anything other than
AIRport (or use any external APIs).  But they
can interoperate with other Applications that run
on an AIRport, any AIRport server that has network
connectivity the the AIRport server running this App.

What remains is a way to ensure that AIRport servers
run in a fair way and can be trusted to enforce data
sharing rules.  

<img src="./images/koinos_logo.png">

This is where public blockchain technology is comes into
the picture.  Public blockchains like Koinos (the <a
href="https://www.youtube.com/watch?v=kp9wTz5f_Yo">
most advanced public blockchain on the planet</a>)
provide a controlled and checked environment in which 
data can be run.  If we can set up a globally trusted
network that can seamlessly and securely share data
between organizations, governments and the people, on
top of a well known relational database technology
then we provide an easy migration path for the 
biggest developer base on the planet to write an
internet of post-decentralized apps.  And with
AIRport's most advanced ORM framework on the planet
my dream framework of working with databases) and it
can just be the right combination of technologies
to change the way applications are written, period.